stages :
  - build
  - test
  - deploy

build-job:
  stage: build
  script:
    - echo "skipping"
    #- echo "building & installing dependencies"
    #- python3 -m venv venv
    #- . venv/bin/activate
    #- pip install flake8
    #- pip install pytest
    #- pip install pytest-cov

unit-test:
  stage: test
  script:
    - echo "skipping "
    #- echo "Running unit tests"
    #- python3 -m venv venv
    #- . venv/bin/activate
    #- pip install flake8
    #- pip install pytest
    #- pip install pytest-cov
    #- pip install requests
    #- pip install pymysql
    #- chmod +x test/unit/test_properties.py
    #- pytest -v test/unit/test_properties.py

curl-test:
  stage: test
  script:
    - echo "skipping"
    #- echo "Running curl tests"
    #- chmod +x test/curltest.sh
    #- ./test/curltest.sh

deploy-job:
  stage: deploy
  #before_script:
  #  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  #  - mkdir -p ~/.ssh
  #  - eval $(ssh-agent -s)
  #  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "Deploying"
    #- echo "$MY_KEY_2_PRIVATE" > mykey.txt # use " so newlines are preserved
    #- chmod 600 mykey.txt
    #- scp -i mykey.txt -r ./* fcv973@cs47832.fulgentcorp.com:assignment3
    - az login --service-principal -u $APP_ID -p $PW --tenant $TENANT
    - az aks get-credentials --resource-group cs4783ResourceGroup --name cs4783Cluster
    - az acr login --name cs4783registry
    - docker build -t cs4783registry.azurecr.io/fcv973-flaskapp:latest ./flaskapp
    - docker push cs4783registry.azurecr.io/fcv973-flaskapp:latest
    - kubectl apply -f fcv973-flaskapp-deployment.yaml
    - kubectl set image deployment fcv973-flaskapp fcv973-flaskapp=cs4783registry.azurecr.io/fcv973-flaskapp:latest
    - kubectl set image deployment fcv973-flaskapp fcv973-flaskapp=cs4783registry.azurecr.io/fcv973-flaskapp
    - kubectl rollout restart deployment
    #...




